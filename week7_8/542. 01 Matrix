class Solution {
public:
   
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int m=mat.size();
        int n=mat[0].size();
        vector<vector<int>> ans(m,vector(n,0));
        vector<vector<bool>> visited(m,vector(n,false));
        int dx[4]={0,1,0,-1};
        int dy[4]={1,0,-1,0};
        queue<pair<pair<int, int>, int>> q;

        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(mat[i][j]==0)
                {
                    q.push({{i,j},0});
                    visited[i][j]=true;
                    ans[i][j]=0;
                }
            }
        }
        while(!q.empty())
        {
            int row = q.front().first.first;
int column = q.front().first.second;
int dist = q.front().second;
q.pop();

            for(int i=0;i<4;i++)
            {
               int nx = row + dx[i];
                int ny = column + dy[i];

                    if(nx>=0&&nx<m&&ny>=0&&ny<n&&!visited[nx][ny])
                    {
                        ans[nx][ny]=1+dist;
                        visited[nx][ny]=true;
                        q.push({{nx,ny},1+dist});
                    } 
            }

        }
      return ans;
    }
};
