#include <bits/stdc++.h>
using namespace std;

vector<int> find3Numbers(const vector<int>& arr) 
{
    // If number of elements < 3, no triplets are possible
    if (arr.size() < 3) {
        return {}; 
    }
  
    // track best sequence length (not current sequence length)
    int seq = 1;
  
    // min number in the array
    int min_num = arr[0];  
  
    // least max number in best sequence
    int max_seq = INT_MAX;
  
    // save arr[i]
    int store_min = min_num;
  
    // Iterate from 1 to arr.size()
    for (int i = 1; i < arr.size(); i++) 
    {
        if (arr[i] == min_num)
            continue;
        else if (arr[i] < min_num) 
        {
            min_num = arr[i];
            continue;
        } 
        
        // this condition is only hit
        // when current sequence size is 2
        else if (arr[i] < max_seq) {    
            max_seq = arr[i]; 
            store_min = min_num;
        } 
        
        // Increase best sequence length & 
        // save next number in triplet
        else if (arr[i] > max_seq) {
            return {store_min, max_seq, arr[i]}; 
        }
    }
  
    // No triplet found
    return {}; 
}

// Driver code
int main() {
    vector<int> arr = {1, 2, -1, 7, 5};
    vector<int> res = find3Numbers(arr);
    for (int x : res) {
        cout << x << " ";
    }
    return 0;
}
